"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[791],{3905:(e,n,r)=>{r.d(n,{Zo:()=>l,kt:()=>h});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function d(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=t.createContext({}),c=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},l=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,l=d(e,["components","mdxType","originalType","parentName"]),u=c(r),h=a,f=u["".concat(s,".").concat(h)]||u[h]||p[h]||i;return r?t.createElement(f,o(o({ref:n},l),{},{components:r})):t.createElement(f,o({ref:n},l))}));function h(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=u;var d={};for(var s in n)hasOwnProperty.call(n,s)&&(d[s]=n[s]);d.originalType=e,d.mdxType="string"==typeof e?e:a,o[1]=d;for(var c=2;c<i;c++)o[c]=r[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},5918:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var t=r(7462),a=(r(7294),r(3905));const i={},o="flushFailedPurchasesCachedAsPendingAndroid",d={unversionedId:"api-reference/methods/android/flush-failed-purchases-cached-as-pending-android",id:"api-reference/methods/android/flush-failed-purchases-cached-as-pending-android",title:"flushFailedPurchasesCachedAsPendingAndroid",description:"Consume all 'ghost' purchases.",source:"@site/docs/api-reference/methods/android/flush-failed-purchases-cached-as-pending-android.md",sourceDirName:"api-reference/methods/android",slug:"/api-reference/methods/android/flush-failed-purchases-cached-as-pending-android",permalink:"/docs/api-reference/methods/android/flush-failed-purchases-cached-as-pending-android",draft:!1,editUrl:"https://github.com/dooboolab/react-native-iap/edit/main/docs/docs/api-reference/methods/android/flush-failed-purchases-cached-as-pending-android.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"deepLinkToSubscriptionsAndroid",permalink:"/docs/api-reference/methods/android/deep-link-to-subscriptions-android"},next:{title:"validateReceiptAndroid",permalink:"/docs/api-reference/methods/android/validate-receipt-android"}},s={},c=[{value:"Signature",id:"signature",level:2},{value:"Usage",id:"usage",level:2}],l={toc:c};function p(e){let{components:n,...r}=e;return(0,a.kt)("wrapper",(0,t.Z)({},l,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"flushfailedpurchasescachedaspendingandroid"},(0,a.kt)("inlineCode",{parentName:"h1"},"flushFailedPurchasesCachedAsPendingAndroid")),(0,a.kt)("p",null,"Consume all 'ghost' purchases."),(0,a.kt)("p",null,"That is, pending payment that already failed but is still marked as pending in Play Store cache."),(0,a.kt)("h2",{id:"signature"},"Signature"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"flushFailedPurchasesCachedAsPendingAndroid(): Promise<void>;\n")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport {Button} from 'react-native';\nimport {flushFailedPurchasesCachedAsPendingAndroid} from 'react-native-iap';\n\nconst App = () => {\n  const handleFlush = async () => {\n    await flushFailedPurchasesCachedAsPendingAndroid();\n  };\n\n  return (\n    <Button title=\"Flush purchases cache\" onPress={handleFlush} />\n  );\n}\n")))}p.isMDXComponent=!0}}]);