"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7165],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=s(r),m=a,f=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return r?n.createElement(f,i(i({ref:t},l),{},{components:r})):n.createElement(f,i({ref:t},l))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},263:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const o={},i="validateReceiptAmazon",c={unversionedId:"api-reference/methods/amazon/validate-receipt-amazon",id:"api-reference/methods/amazon/validate-receipt-amazon",title:"validateReceiptAmazon",description:"Validate receipt.",source:"@site/docs/api-reference/methods/amazon/validate-receipt-amazon.md",sourceDirName:"api-reference/methods/amazon",slug:"/api-reference/methods/amazon/validate-receipt-amazon",permalink:"/docs/api-reference/methods/amazon/validate-receipt-amazon",draft:!1,editUrl:"https://github.com/dooboolab/react-native-iap/edit/main/docs/docs/api-reference/methods/amazon/validate-receipt-amazon.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"validateReceiptAndroid",permalink:"/docs/api-reference/methods/android/validate-receipt-android"},next:{title:"PurchaseError",permalink:"/docs/api/classes/PurchaseError"}},p={},s=[{value:"Signature",id:"signature",level:2},{value:"Usage",id:"usage",level:2}],l={toc:s};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"validatereceiptamazon"},(0,a.kt)("inlineCode",{parentName:"h1"},"validateReceiptAmazon")),(0,a.kt)("p",null,"Validate receipt."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"This method is here for debugging purposes only. Including your\ndeveloper secret in the binary you ship to users is potentially dangerous.\nUse server-side validation instead for your production builds.")),(0,a.kt)("h2",{id:"signature"},"Signature"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"validateReceiptAmazon(\n  /** From the Amazon developer console */\n  developerSecret: string,\n\n  /** Who purchased the item. */\n  userId: string,\n\n  /** Long obfuscated string returned when purchasing the item */\n  receiptId: string,\n\n  /** Defaults to true, use sandbox environment or production. */\n  useSandbox: boolean = true,\n): Promise<AmazonReceiptType>;\n")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport {Button} from 'react-native';\nimport {validateReceiptAmazon} from 'react-native-iap';\n\nconst App = () => {\n  const handlePurchase = async () => {\n    const response = await validateReceiptAmazon(\n      'your-developer-secret',\n      'user-id',\n      'receipt-id',\n    );\n  };\n\n  return <Button title=\"Purchase\" onPress={handlePurchase} />;\n};\n")))}d.isMDXComponent=!0}}]);